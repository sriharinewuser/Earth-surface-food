{"ast":null,"code":"import{useParams}from'react-router-dom';import classes from'./foodEdit.module.css';import{useForm}from'react-hook-form';import{useEffect,useState}from'react';import{add,getById,update}from'../../services/foodService';import Title from'../../components/Title/Title';import InputContainer from'../../components/InputContainer/InputContainer';import Input from'../../components/Input/Input';import Button from'../../components/Button/Button';import{uploadImage}from'../../services/uploadService';import{toast}from'react-toastify';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function FoodEditPage(){const{foodId}=useParams();const[imageUrl,setImageUrl]=useState();const isEditMode=!!foodId;const navigate=useNavigate();const{handleSubmit,register,formState:{errors},reset}=useForm();useEffect(()=>{if(!isEditMode)return;getById(foodId).then(food=>{if(!food)return;reset(food);setImageUrl(food.imageUrl);});},[foodId]);const submit=async foodData=>{const food={...foodData,imageUrl};if(isEditMode){await update(food);toast.success(`Food \"${food.name}\" updated successfully!`);return;}const newFood=await add(food);toast.success(`Food \"${food.name}\" added successfully!`);navigate('/admin/editFood/'+newFood.id,{replace:true});};const upload=async event=>{setImageUrl(null);const imageUrl=await uploadImage(event);setImageUrl(imageUrl);};return/*#__PURE__*/_jsx(\"div\",{className:classes.container,children:/*#__PURE__*/_jsxs(\"div\",{className:classes.content,children:[/*#__PURE__*/_jsx(Title,{title:isEditMode?'Edit Food':'Add Food'}),/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:handleSubmit(submit),noValidate:true,children:[/*#__PURE__*/_jsx(InputContainer,{label:\"Select Image\",children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:upload,accept:\"image/jpeg\"})}),imageUrl&&/*#__PURE__*/_jsx(\"a\",{href:imageUrl,className:classes.image_link,target:\"blank\",children:/*#__PURE__*/_jsx(\"img\",{src:imageUrl,alt:\"Uploaded\"})}),/*#__PURE__*/_jsx(Input,{type:\"text\",label:\"Name\",...register('name',{required:true,minLength:5}),error:errors.name}),/*#__PURE__*/_jsx(Input,{type:\"number\",label:\"Price\",...register('price',{required:true}),error:errors.price}),/*#__PURE__*/_jsx(Input,{type:\"text\",label:\"Tags\",...register('tags'),error:errors.tags}),/*#__PURE__*/_jsx(Input,{type:\"text\",label:\"Origins\",...register('origins',{required:true}),error:errors.origins}),/*#__PURE__*/_jsx(Input,{type:\"text\",label:\"Cook Time\",...register('cookTime',{required:true}),error:errors.cookTime}),/*#__PURE__*/_jsx(Button,{type:\"submit\",text:isEditMode?'Update':'Create'})]})]})});}","map":{"version":3,"names":["useParams","classes","useForm","useEffect","useState","add","getById","update","Title","InputContainer","Input","Button","uploadImage","toast","useNavigate","jsx","_jsx","jsxs","_jsxs","FoodEditPage","foodId","imageUrl","setImageUrl","isEditMode","navigate","handleSubmit","register","formState","errors","reset","then","food","submit","foodData","success","name","newFood","id","replace","upload","event","className","container","children","content","title","form","onSubmit","noValidate","label","type","onChange","accept","href","image_link","target","src","alt","required","minLength","error","price","tags","origins","cookTime","text"],"sources":["/home/rajesh/Desktop/srihari new user/Earth-surface-food/frontend/src/pages/FoodEdit/FoodEditPage.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport classes from './foodEdit.module.css';\nimport { useForm } from 'react-hook-form';\nimport { useEffect, useState } from 'react';\nimport { add, getById, update } from '../../services/foodService';\nimport Title from '../../components/Title/Title';\nimport InputContainer from '../../components/InputContainer/InputContainer';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { uploadImage } from '../../services/uploadService';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function FoodEditPage() {\n  const { foodId } = useParams();\n  const [imageUrl, setImageUrl] = useState();\n  const isEditMode = !!foodId;\n\n  const navigate = useNavigate();\n\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  useEffect(() => {\n    if (!isEditMode) return;\n\n    getById(foodId).then(food => {\n      if (!food) return;\n      reset(food);\n      setImageUrl(food.imageUrl);\n    });\n  }, [foodId]);\n\n  const submit = async foodData => {\n    const food = { ...foodData, imageUrl };\n\n    if (isEditMode) {\n      await update(food);\n      toast.success(`Food \"${food.name}\" updated successfully!`);\n      return;\n    }\n\n    const newFood = await add(food);\n    toast.success(`Food \"${food.name}\" added successfully!`);\n    navigate('/admin/editFood/' + newFood.id, { replace: true });\n  };\n\n  const upload = async event => {\n    setImageUrl(null);\n    const imageUrl = await uploadImage(event);\n    setImageUrl(imageUrl);\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.content}>\n        <Title title={isEditMode ? 'Edit Food' : 'Add Food'} />\n        <form\n          className={classes.form}\n          onSubmit={handleSubmit(submit)}\n          noValidate\n        >\n          <InputContainer label=\"Select Image\">\n            <input type=\"file\" onChange={upload} accept=\"image/jpeg\" />\n          </InputContainer>\n\n          {imageUrl && (\n            <a href={imageUrl} className={classes.image_link} target=\"blank\">\n              <img src={imageUrl} alt=\"Uploaded\" />\n            </a>\n          )}\n\n          <Input\n            type=\"text\"\n            label=\"Name\"\n            {...register('name', { required: true, minLength: 5 })}\n            error={errors.name}\n          />\n\n          <Input\n            type=\"number\"\n            label=\"Price\"\n            {...register('price', { required: true })}\n            error={errors.price}\n          />\n\n          <Input\n            type=\"text\"\n            label=\"Tags\"\n            {...register('tags')}\n            error={errors.tags}\n          />\n\n          <Input\n            type=\"text\"\n            label=\"Origins\"\n            {...register('origins', { required: true })}\n            error={errors.origins}\n          />\n\n          <Input\n            type=\"text\"\n            label=\"Cook Time\"\n            {...register('cookTime', { required: true })}\n            error={errors.cookTime}\n          />\n\n          <Button type=\"submit\" text={isEditMode ? 'Update' : 'Create'} />\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}